<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>JustinFX.com</title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://justinfx.com/tags/flash/</link>
    <language>en-us</language>
    <author>Justin Israel</author>
    <copyright>2010 Justin Israel</copyright>
    <updated>Fri, 15 Jan 2010 00:00:00 UTC</updated>
    
    
    <item>
      <title>Python API for XML/SWF Charts (Flash Graphing)</title>
      <link>http://justinfx.com/2010/01/15/python-api-for-xmlswf-charts-flash-graphing/</link>
      <pubDate>Fri, 15 Jan 2010 00:00:00 UTC</pubDate>
      <author>Justin Israel</author>
      <guid>http://justinfx.com/2010/01/15/python-api-for-xmlswf-charts-flash-graphing/</guid>
      <description>

&lt;p&gt;I had a project where I was designing a statistics reporting site, to track production stats. I wanted to have really nice graphs that pulled from the database and were somewhat live and interactive. XML/SWF Charts is this awesome flash-based app that lets you embed graphs in your pages which receive their data from XML. There are tons of graph types and ways to customize the look.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.maani.us/xml_charts/index.php&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-59&#34; title=&#34;graphs_example&#34; src=&#34;http://justinfx.com/wp-content/uploads/2010/01/graphs_example.jpg&#34; alt=&#34;&#34; width=&#34;754&#34; height=&#34;112&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.maani.us/xml_charts/index.php&#34;&gt;http://www.maani.us/xml_charts/index.php&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, the thing is&amp;#8230; I wanted to use Django for the site. I decided to write a python module that wraps around the API for SWF charts, so that the XML could easily be generated for me after just setting all my parameters. Thought I might post this here for any python fans wanting nice looking graphs in their site.&lt;/p&gt;

&lt;p&gt;Really, this doesn&amp;#8217;t just apply to django. You could just call out from anything to python code that will generate your XML for you.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;


chart = SwfChart()

# the data
chart.addRow( &#39;Person A&#39;, 1, 10, 5.5 )
chart.addRow( &#39;Person B&#39;, 6, 4.45, 8 )
chart.addColumnLabel( &#39;Day1&#39;, &#39;Day2&#39;, &#39;Day3&#39; )

# Extra graph settings
chart.addFilter(&#39;shadow&#39;, &#39;low&#39;, distance=2, angle=45, alpha=35, blurX=5, blurY=5)
chart.addFilter(&#39;shadow&#39;, &#39;high&#39;, distance=3, angle=45, alpha=35, blurX=10, blurY=10)
chart.addFilter(&#39;bevel&#39;, &#39;bevel1&#39;, strength=10, quality=3, distance=2)
chart.setChartBorder(top=1, bottom=2, left=0, right=0, color=&#39;000000&#39;)
chart.setChartLabel(color=&#39;000000&#39;, alpha=80, size=8, position=&#39;outside&#39;, hide_zero=True)
chart.setChartTransition(type=&#39;scale&#39;, delay=.5, duration=.5, order=&#39;series&#39;)
chart.setChartRect(shadow=&#39;high&#39;)
chart.setLegend(size=12, alpha=90, fill_alpha=30)
chart.setAxisTicks(category_ticks=True, value_ticks=True, minor_count=3)
chart.setContextMenu(about=False)

# if you have the licensed version
chart.setLicense(&#39;license string&#39;)


&lt;p&gt;Now at this point, the object can be treated like a string to get the xml, or just call getXML() :&lt;/p&gt;

&lt;p&gt;
print chart

print chart.getXML()   # same thing

xml = str(chart)   # or assign the XML string somewhere
&lt;/p&gt;

&lt;p&gt;You can download the swfcharts.py module and use it freely. If you find it helpful, post a comment or shoot me an email.&lt;/p&gt;

&lt;h4 id=&#34;download-swfcharts-py-wp-content-uploads-2010-01-swfcharts-py-zip:49cac3fa1a8c2fa6889e2e792973fcce&#34;&gt;Download &lt;a href=&#34;http://justinfx.com/wp-content/uploads/2010/01/swfcharts.py_.zip&#34;&gt;swfcharts.py&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Pydoc located here for convenience:&lt;span style=&#34;color: #ffcc00;&#34;&gt;&lt;br /&gt; &lt;a href=&#39;http://justinfx.com/wp-content/uploads/2010/01/swfcharts.html&#39;&gt;swfcharts python documentation&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
</description>
    </item>
    
    
  </channel>
</rss>